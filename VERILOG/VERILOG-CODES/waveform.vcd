$date
	Tue Nov  7 14:31:25 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! S [3:0] $end
$var wire 1 " C $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % M $end
$var reg 1 & clk $end
$scope module uut $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 % M $end
$var wire 1 ) Y1 $end
$var wire 1 * Y2 $end
$var wire 1 + Y3 $end
$var wire 1 , Y4 $end
$var wire 1 - S3 $end
$var wire 1 . S2 $end
$var wire 1 / S1 $end
$var wire 1 0 S0 $end
$var wire 4 1 S [3:0] $end
$var wire 1 2 C3 $end
$var wire 1 3 C2 $end
$var wire 1 4 C1 $end
$var wire 1 " C $end
$scope module f0 $end
$var wire 1 5 a $end
$var wire 1 ) b $end
$var wire 1 4 c $end
$var wire 1 % cin $end
$var wire 1 0 s $end
$var wire 1 6 y1 $end
$var wire 1 7 y2 $end
$var wire 1 8 y3 $end
$upscope $end
$scope module f1 $end
$var wire 1 9 a $end
$var wire 1 * b $end
$var wire 1 3 c $end
$var wire 1 4 cin $end
$var wire 1 / s $end
$var wire 1 : y1 $end
$var wire 1 ; y2 $end
$var wire 1 < y3 $end
$upscope $end
$scope module f2 $end
$var wire 1 = a $end
$var wire 1 + b $end
$var wire 1 2 c $end
$var wire 1 3 cin $end
$var wire 1 . s $end
$var wire 1 > y1 $end
$var wire 1 ? y2 $end
$var wire 1 @ y3 $end
$upscope $end
$scope module f3 $end
$var wire 1 A a $end
$var wire 1 , b $end
$var wire 1 " c $end
$var wire 1 2 cin $end
$var wire 1 - s $end
$var wire 1 B y1 $end
$var wire 1 C y2 $end
$var wire 1 D y3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0D
0C
1B
0A
0@
0?
0>
0=
0<
0;
1:
09
08
07
06
05
04
03
02
b1010 1
00
1/
0.
1-
1,
0+
1*
0)
b1010 (
b0 '
0&
0%
b1010 $
b0 #
0"
b1010 !
$end
#5
1&
#10
1.
14
1/
13
17
0:
1;
1)
b1111 !
b1111 1
10
15
19
0&
1%
b100 $
b100 (
b11 #
b11 '
#15
1&
#20
0&
